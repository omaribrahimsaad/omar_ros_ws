<?xml version="1.0"?>
<launch>
	<arg name="description_config" default="$(find moverobotic_mk1)/robot_description/urdf/mk_one.xacro"/>
	<arg name="odometry_config" default="$(find moverobotic_mk1)/yaml/odometry.yaml"/>
	<arg name="joy_config" default="$(find moverobotic_mk1)/yaml/joy.yaml"/>
	<arg name="teleop_twist_config" default="$(find moverobotic_mk1)/yaml/teleop_twist.yaml"/>
	<arg name="twist_mux_config" default="$(find moverobotic_mk1)/yaml/twist_mux.yaml"/>
	<arg name="rqt_config" default="$(find moverobotic_mk1)/perspective/rqt_hardware.perspective"/>
	<arg name="rviz_config" default="$(find moverobotic_mk1)/rviz/rviz_hardware.rviz"/>
	<arg name="lidar_front_config" default="$(find moverobotic_mk1)/yaml/lidar_front.yaml"/>
	<arg name="lidar_rear_config" default="$(find moverobotic_mk1)/yaml/lidar_rear.yaml"/>
	<arg name="lidar_merge_config" default="$(find moverobotic_mk1)/yaml/lidar_merge.yaml"/>
	<!-- <arg name="lidar_config" default="$(find moverobotic_mk1)/yaml/scan_filter.yaml"/> -->
	


	<!-- <node name="mrc_adapt_node" pkg="mrc_adapt" type="mrc_adapt_node" output="screen" respawn="true">
		<rosparam command="load" file="$(arg mrc_config)"/>
	</node> -->

	<node pkg="mrc10100" type="mrc10100_node" name="mrc10100_node" output="screen">
		<!-- USB port name -->
		<param name="port" value="/dev/ttyACM0"/>
		<!-- serial baud rate -->
		<param name="baud_rate" value="115200"/>

		<!-- base link frame -->
		<param name="base_frame_id" value="base_footprint"/>

		<!-- PID constant (P) for linear X  -->
		<!-- <param name="pid_x_p" value="120"/> -->
		<!-- PID constant (I) for linear X  -->
		<!-- <param name="pid_x_i" value="1600"/> -->
		<!-- PID constant (D) for linear X  -->
		<!-- <param name="pid_x_d" value="6"/> -->
		<!-- PID coefficient derivative filter (N) for linear X  -->
		<!-- <param name="pid_x_n" value="50"/> -->
		<!-- PID high limit output for linear X  -->
		<!-- <param name="pid_x_high" value="1000"/> -->
		<!-- PID low limit output for linear X  -->
		<!-- <param name="pid_x_low" value="-1000"/> -->
		<!-- PID integration windup for linear X  -->
		<!-- <param name="pid_x_windup" value="true"/> -->

		<!-- PID constant (P) for angular Z  -->
		<!-- <param name="pid_z_p" value="30"/> -->
		<!-- PID constant (I) for angular Z  -->
		<!-- <param name="pid_z_i" value="461.5"/> -->
		<!-- PID constant (D) for angular Z  -->
		<!-- <param name="pid_z_d" value="1.3"/> -->
		<!-- PID coefficient derivative filter (N) for angular Z  -->
		<!-- <param name="pid_z_n" value="50"/> -->
		<!-- PID high limit output for angular Z  -->
		<!-- <param name="pid_z_high" value="1000"/> -->
		<!-- PID low limit output for angular Z  -->
		<!-- <param name="pid_z_low" value="-1000"/> -->
		<!-- PID integration windup for angular Z  -->
		<!-- <param name="pid_z_windup" value="true"/> -->

		<!-- PID constant (P) for linear X  -->
		<param name="pid_x_p" value="290"/>
		<!-- PID constant (I) for linear X  -->
		<param name="pid_x_i" value="2762"/>
		<!-- PID constant (D) for linear X  -->
		<param name="pid_x_d" value="10"/>
		<!-- PID coefficient derivative filter (N) for linear X  -->
		<param name="pid_x_n" value="50"/>
		<!-- PID high limit output for linear X  -->
		<param name="pid_x_high" value="1000"/>
		<!-- PID low limit output for linear X  -->
		<param name="pid_x_low" value="-1000"/>
		<!-- PID integration windup for linear X  -->
		<param name="pid_x_windup" value="true"/>

		<!-- PID constant (P) for angular Z  -->
		<param name="pid_z_p" value="80"/>
		<!-- PID constant (I) for angular Z  -->
		<param name="pid_z_i" value="800"/>
		<!-- PID constant (D) for angular Z  -->
		<param name="pid_z_d" value="3.5"/>
		<!-- PID coefficient derivative filter (N) for angular Z  -->
		<param name="pid_z_n" value="50"/>
		<!-- PID high limit output for angular Z  -->
		<param name="pid_z_high" value="1000"/>
		<!-- PID low limit output for angular Z  -->
		<param name="pid_z_low" value="-1000"/>
		<!-- PID integration windup for angular Z  -->
		<param name="pid_z_windup" value="true"/>

		<!-- distance between wheel (differentational robot) -->
		<param name="wheel_distance" value="0.462"/>
		<!-- right wheel motor diameter in meter (differentational robot) -->
		<param name="wheel_right_size" value="0.14"/>
		<!-- left wheel motor diameter in meter (differentational robot) -->
		<param name="wheel_left_size" value="0.14"/>

		<!-- count per rotation(CPR) of right wheel encoder -->
		<param name="encoder_wheel_right_cpr" value="3600"/>
		<!-- number of coefficient(N) derivative filter right wheel encoder -->
		<param name="encoder_wheel_right_n" value="50"/>
		<!-- count per rotation(CPR) of left wheel encoder -->
		<param name="encoder_wheel_left_cpr" value="3600"/>
		<!-- number of coefficient(N) derivative filter left wheel encoder -->
		<param name="encoder_wheel_left_n" value="50"/>

		<!-- imu acceleration bias x -->
		<param name="imu_acc_bias_x" value="-0.10"/>
		<!-- imu acceleration bias y -->
		<param name="imu_acc_bias_y" value="0.10"/>
		<!-- imu acceleration bias z -->
		<param name="imu_acc_bias_z" value="-0.94"/>
		<!-- imu acceleration scale x -->
		<param name="imu_acc_scale_x" value="1.00"/>
		<!-- imu acceleration scale y -->
		<param name="imu_acc_scale_y" value="1.00"/>
		<!-- imu acceleration scale z -->
		<param name="imu_acc_scale_z" value="1.01"/>

		<!-- imu gyro bias x -->
		<param name="imu_gyro_bias_x" value="0.168714"/>
		<!-- imu gyro bias y -->
		<param name="imu_gyro_bias_y" value="-0.041812"/>
		<!-- imu gyro bias z -->
		<param name="imu_gyro_bias_z" value="0.011276"/>

		<!-- imu mag bias x -->
		<param name="imu_mag_bias_x" value="-25.46"/>
		<!-- imu mag bias y -->
		<param name="imu_mag_bias_y" value="2.67"/>
		<!-- imu mag bias z -->
		<param name="imu_mag_bias_z" value="2.15"/>
		<!-- imu mag scale x -->
		<param name="imu_mag_scale_x" value="1.01"/>
		<!-- imu mag scale y -->
		<param name="imu_mag_scale_y" value="1.05"/>
		<!-- imu mag scale z -->
		<param name="imu_mag_scale_z" value="0.94"/>

		<!-- advance data request for monitor only -->
		<param name="advance" value="false"/>
		<!-- debug data receive and send for monitor only -->
		<param name="debug" value="true"/>

		<!-- odom -->
		<param name="encoder_topic" value="/odom"/>

	</node>

	<node pkg="gyro_autocalibrate" type="gyro_autocalibrate_node" name="gyro_autocalibrate_node" output="screen">
		<param name="input_topic" value="mrc10100/imu"/>
		<param name="output_topic" value="imu/cal"/>
		<param name="debug" value="true"/>

		<param name="high_rms_threshold_gx" value="0.001"/>
		<param name="low_rms_threshold_gx" value="0.0050"/>

		<param name="high_rms_threshold_gy" value="0.001"/>
		<param name="low_rms_threshold_gy" value="0.0050"/>

		<param name="high_rms_threshold_gz" value="0.001"/>
		<param name="low_rms_threshold_gz" value="0.0050"/>
		<remap from="/imu/cal" to="/imu"/>
	</node>

	<group ns="joy_teleop0">
		<node name="joy_node" pkg="joy" type="joy_node" output="screen" respawn="true">
			<rosparam command="load" file="$(arg joy_config)"/>
		</node>

		<node name="teleop_twist_node" pkg="teleop_twist_joy" type="teleop_node" output="screen" respawn="true">
			<rosparam command="load" file="$(arg teleop_twist_config)"/>
		</node>
	</group>

	<node name="twist_mux_node" pkg="twist_mux" type="twist_mux" output="screen" respawn="true">
		<rosparam command="load" file="$(arg twist_mux_config)"/>
		<remap from="cmd_vel_out" to="/mrc10100/cmd_vel"/>
	</node>

	<param name="robot_description" command="$(find xacro)/xacro --inorder '$(arg description_config)'"/>
	
	<node name="robot_state_publisher_node" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true">
	</node>

	<node name="odometry_node" pkg="robot_localization" type="ekf_localization_node" respawn="true">
		<rosparam command="load" file="$(arg odometry_config)"/>
		<remap from="set_pose" to="initialpose/ekf"/>
		<!-- <remap from="odometry/filtered" to="odometry/filtered"/> -->
	</node>

	<group ns="lidar_front">
		<rosparam command="load" file="$(arg lidar_front_config)"/>

		<node name="lidar_front" pkg="urg_node" type="urg_node" output="screen" respawn="true">
		</node>

		<node name="lidar_filter_front" pkg="laser_filters" type="scan_to_scan_filter_chain" respawn="true" output="screen">
		</node>
	</group>

	<group ns="lidar_rear">
		<rosparam command="load" file="$(arg lidar_rear_config)"/>

		<node name="lidar_rear" pkg="urg_node" type="urg_node" output="screen" respawn="true">
		</node>

		<node name="lidar_filter_rear" pkg="laser_filters" type="scan_to_scan_filter_chain" respawn="true" output="screen">
		</node>
	</group>

	<node name="lidar_merge" pkg="ira_laser_tools" type="laserscan_multi_merger" respawn="true" output="screen"
		launch-prefix="bash -c 'sleep 2; $0 $@'">
		<rosparam command="load" file="$(arg lidar_merge_config)" />
		<remap from="laserscan_multi_merger/scan" to="lidar_merge/scan"/>
	</node>

	<!-- <node name="lidar_filter" pkg="laser_filters" type="scan_filter_chain" respawn="true" output="screen">
		<remap from="laserscan_multi_merger/scan" to="lidar_merge/scan"/>
		<rosparam command="load" file="$(arg lidar_config)"/>
	</node> -->

	<!-- <node name="rqt_gui" pkg="rqt_gui" type="rqt_gui" required="true"
		args="-perspective-file $(arg rqt_config)"
		launch-prefix="bash -c 'sleep 1; $0 $@' ">
	</node> -->

	<node name="rviz" pkg="rviz" type="rviz" required="true"
		args="-d $(arg rviz_config)"
		launch-prefix="bash -c 'sleep 3; $0 $@' ">
	</node>
</launch>